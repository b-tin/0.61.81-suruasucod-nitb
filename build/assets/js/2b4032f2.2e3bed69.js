"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1748],{3400:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var s=t(4848),i=t(8453);const a={sidebar_position:1},o="Amazon Cloud Service (AWS)",c={id:"ops/aws",title:"Amazon Cloud Service (AWS)",description:"Containers/Elastic Container Service (ECS)",source:"@site/docs/ops/aws.mdx",sourceDirName:"ops",slug:"/ops/aws",permalink:"/0.61.81-suruasucod-nitb/docs/ops/aws",draft:!1,unlisted:!1,editUrl:"https://github.com/b-tin/0.61.81-suruasucod-nitb/tree/main/docs/ops/aws.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Operation",permalink:"/0.61.81-suruasucod-nitb/docs/category/operation"},next:{title:"Docker",permalink:"/0.61.81-suruasucod-nitb/docs/ops/docker"}},r={},l=[{value:"Containers/Elastic Container Service (ECS)",id:"containerselastic-container-service-ecs",level:2},{value:"1.1. ECS: Enabling Amazon ECS Exec",id:"11-ecs-enabling-amazon-ecs-exec",level:3},{value:"Problem",id:"problem",level:5},{value:"Solution",id:"solution",level:5},{value:"Preparation",id:"preparation",level:5},{value:"Step 1: Update IAM Trust Relationship",id:"step-1-update-iam-trust-relationship",level:6},{value:"Step 2: Update IAM Role Policies",id:"step-2-update-iam-role-policies",level:6},{value:"Step 3: Update ECS Task Definition",id:"step-3-update-ecs-task-definition",level:6},{value:"Step 4: Enable Execution Command in ECS Cluster",id:"step-4-enable-execution-command-in-ecs-cluster",level:6},{value:"Execution",id:"execution",level:5},{value:"Reference",id:"reference",level:5},{value:"Containers/Amazon Elastic Kubernetes (EKS)",id:"containersamazon-elastic-kubernetes-eks",level:2},{value:"Cloud Formation/Cloud Development Kit (CDK)",id:"cloud-formationcloud-development-kit-cdk",level:2},{value:"1.1. CDK: Init Development Environment",id:"11-cdk-init-development-environment",level:3},{value:"Problem",id:"problem-1",level:5},{value:"Solution",id:"solution-1",level:5},{value:"1.1.1 Preparation",id:"111-preparation",level:6},{value:"1.1.2 Folder Structure",id:"112-folder-structure",level:5},{value:"1.1.3 Init New VPC",id:"113-init-new-vpc",level:5},{value:"Containers/Nat",id:"containersnat",level:2},{value:"1.1. Nat: Nat Gateway and Nat Instances",id:"11-nat-nat-gateway-and-nat-instances",level:3},{value:"1.1.1 Comparison",id:"111-comparison",level:5},{value:"1.1.2 Nat Gateway",id:"112-nat-gateway",level:5},{value:"1.1.3 Nat Instances",id:"113-nat-instances",level:5},{value:"Diagram",id:"diagram",level:6},{value:"CDK",id:"cdk",level:6},{value:"Testing",id:"testing",level:6},{value:"Reference",id:"reference-1",level:6}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h5:"h5",h6:"h6",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"amazon-cloud-service-aws",children:"Amazon Cloud Service (AWS)"}),"\n",(0,s.jsx)(n.h2,{id:"containerselastic-container-service-ecs",children:"Containers/Elastic Container Service (ECS)"}),"\n",(0,s.jsx)(n.h3,{id:"11-ecs-enabling-amazon-ecs-exec",children:"1.1. ECS: Enabling Amazon ECS Exec"}),"\n",(0,s.jsx)(n.h5,{id:"problem",children:"Problem"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Default Amazon ECS Exec is disabled in the ECS cluster and we can not execute the command in the container to debug the application, eg: healthcheck, log, etc."})}),"\n",(0,s.jsx)(n.h5,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Since 2021-03-16, Amazon ECS Exec is available for all ECS clusters ",(0,s.jsx)(n.a,{href:"https://aws.amazon.com/blogs/containers/new-using-amazon-ecs-exec-access-your-containers-fargate-ec2/",children:"https://aws.amazon.com/blogs/containers/new-using-amazon-ecs-exec-access-your-containers-fargate-ec2/"})]})}),"\n",(0,s.jsx)(n.h5,{id:"preparation",children:"Preparation"}),"\n",(0,s.jsx)(n.h6,{id:"step-1-update-iam-trust-relationship",children:"Step 1: Update IAM Trust Relationship"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Effect": "Allow",\n            "Principal": {\n                "Service": "ecs-tasks.amazonaws.com"\n            },\n            "Action": "sts:AssumeRole"\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(n.h6,{id:"step-2-update-iam-role-policies",children:"Step 2: Update IAM Role Policies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'{\n    "Version": "2012-10-17",\n    "Statement": [\n        {\n            "Effect": "Allow",\n            "Action": [\n                "ssmmessages:CreateControlChannel",\n                "ssmmessages:CreateDataChannel",\n                "ssmmessages:OpenControlChannel",\n                "ssmmessages:OpenDataChannel"\n            ],\n            "Resource": "*"\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(n.h6,{id:"step-3-update-ecs-task-definition",children:"Step 3: Update ECS Task Definition"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Access ECS and Update Task Definition"}),"\n",(0,s.jsxs)(n.li,{children:["Ensure you add the following JSON snippet under containerDefinitions to enable ",(0,s.jsx)(n.code,{children:"initProcessEnabled"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'{\n    "family": "foo-service",\n    "containerDefinitions": [\n        {\n            ...\n            "volumesFrom": [],\n            // highlight-start\n            "linuxParameters": {\n                "initProcessEnabled": true\n            },\n            // highlight-end\n            ...\n            "healthCheck": {\n                "command": [\n                    "CMD-SHELL",\n                    "curl -f http://localhost/healthcheck || exit 1"\n                ],\n                "interval": 90,\n                "timeout": 10,\n                "retries": 3,\n                "startPeriod": 10\n            },\n            "systemControls": []\n        }\n    ]\n}\n'})}),"\n",(0,s.jsx)(n.h6,{id:"step-4-enable-execution-command-in-ecs-cluster",children:"Step 4: Enable Execution Command in ECS Cluster"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"After updating the task definition, we need to update the ECS service to enable the execution command."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{\n    export ECS_CLUSTER_NAME='foo-cluster'\n    export ECS_SERVICE_NAME='foo-service'\n    export AWS_REGION='us-east-2'\n    aws ecs update-service \\\n      --cluster $ECS_CLUSTER_NAME \\\n      --service $ECS_SERVICE_NAME \\\n      --region $AWS_REGION \\\n      --enable-execute-command \\\n      --force-new-deployment\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Check if the execution command is enabled, the output result in showing that is ",(0,s.jsx)(n.code,{children:"true"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{\n    export ECS_CLUSTER_NAME='foo-cluster'\n    export ECS_SERVICE_NAME='foo-service'\n    export AWS_REGION='us-east-2'\n    aws ecs describe-services \\\n      --cluster ECS_CLUSTER_NAME \\\n      --service ECS_SERVICE_NAME \\\n      --region AWS_REGION \\\n      | jq '.services[0].enableExecuteCommand'\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"docsOpsAws111",src:t(6490).A+"",width:"802",height:"151"})}),"\n",(0,s.jsx)(n.h5,{id:"execution",children:"Execution"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Access the ECS console and click on the ECS cluster and select the ECS service to get ECS task arn"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"docsOpsAws112",src:t(5473).A+"",width:"757",height:"699"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{\n    export ECS_CLUSTER_NAME='foo-cluster'\n    export AWS_REGION='us-east-2'\n    aws ecs describe-services \\\n      --cluster ECS_CLUSTER_NAME \\\n      --service ECS_SERVICE_NAME \\\n      --region AWS_REGION \\\n      | jq '.services[0].events[].message'\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Execute the command to access the container"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"{\n    export ECS_CLUSTER_NAME='foo-cluster'\n    export ECS_TASK_ARN='arn:aws:ecs:us-east-2:123456789012:task/foo-cluster/1234567890123456789'\n    export AWS_REGION='us-east-2'\n    aws ecs execute-command \\\n      --cluster $ECS_CLUSTER_NAME \\\n      --task $ECS_TASK_ARN \\\n      --container foo-container \\\n      --interactive \\\n      --command \"/bin/bash\"\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"If we get the error message, so need to install the SessionManagerPlugin"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"danger",children:(0,s.jsxs)(n.p,{children:["SessionManagerPlugin is not found. Please refer to SessionManager Documentation here: ",(0,s.jsx)(n.a,{href:"http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found",children:"http://docs.aws.amazon.com/console/systems-manager/session-manager-plugin-not-found"})]})}),"\n",(0,s.jsx)(n.h5,{id:"reference",children:"Reference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://aws.amazon.com/blogs/containers/new-using-amazon-ecs-exec-access-your-containers-fargate-ec2/",children:"NEW \u2013 Using Amazon ECS Exec to access your containers on AWS Fargate and Amazon EC2"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://medium.com/@mariotolic/a-step-by-step-guide-to-enabling-amazon-ecs-exec-a88b05858709",children:"A Step-by-Step Guide to Enabling Amazon ECS Exec\n"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/systems-manager/latest/userguide/install-plugin-macos-overview.html",children:"Install the Session Manager plugin on macOS\n"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"containersamazon-elastic-kubernetes-eks",children:"Containers/Amazon Elastic Kubernetes (EKS)"}),"\n",(0,s.jsx)(n.h2,{id:"cloud-formationcloud-development-kit-cdk",children:"Cloud Formation/Cloud Development Kit (CDK)"}),"\n",(0,s.jsx)(n.h3,{id:"11-cdk-init-development-environment",children:"1.1. CDK: Init Development Environment"}),"\n",(0,s.jsx)(n.h5,{id:"problem-1",children:"Problem"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"We need to create a new CDK project and initialize the development environment. In development environment will use dedicated VPC, Subnet, Security Group, etc. to avoid conflict with the existing environment. Also with private and public subnets, we can deploy the application in a secure way."}),(0,s.jsxs)(n.p,{children:["What and why CDK? ",(0,s.jsx)(n.code,{children:"https://www.pluralsight.com/blog/cloud/what-is-aws-cdk-cloud-development"})]})]}),"\n",(0,s.jsx)(n.h5,{id:"solution-1",children:"Solution"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["Reference: ",(0,s.jsx)(n.a,{href:"https://github.com/b-tin/x81-kdc-nitb/tree/main/btin/",children:"https://github.com/b-tin/x81-kdc-nitb/tree/main/btin/"})]})}),"\n",(0,s.jsx)(n.h6,{id:"111-preparation",children:"1.1.1 Preparation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Current version of CDK"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"{\n    nvm use v18.16.0\n    cdk version\n    # 2.125.0 (build 5e3c3c6)\n}\n"})}),"\n",(0,s.jsx)(n.h5,{id:"112-folder-structure",children:"1.1.2 Folder Structure"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Separated folder for each region and each environment, example environment ",(0,s.jsx)(n.code,{children:"development"})," in region ",(0,s.jsx)(n.code,{children:"us-east-2"}),", in future if we have new environment, example ",(0,s.jsx)(n.code,{children:"staging"}),", will create new folder under region ",(0,s.jsx)(n.code,{children:"us-east-2"})," too. Also same with AWS components, it's separated folder too, example ",(0,s.jsx)(n.code,{children:"networking-content-delivery/vpc"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",metastring:"title='Folder Structure'",children:"\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 bin\n\u2502\xa0\xa0 \u251c\u2500\u2500 mimic.d.ts\n\u2502\xa0\xa0 \u2514\u2500\u2500 mimic.ts\n\u251c\u2500\u2500 cdk.context.json\n\u251c\u2500\u2500 cdk.json\n\u251c\u2500\u2500 jest.config.js\n\u251c\u2500\u2500 lib\n\u2502\xa0\xa0 \u251c\u2500\u2500 us-east-2\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 development\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 compute\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u251c\u2500\u2500 ec2\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 bastion\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 mimic.d.ts\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 mimic.ts\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0 \u2514\u2500\u2500 verifyVpcEndpoint\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0     \u251c\u2500\u2500 mimic.d.ts\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 mimic.ts\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0 \u2514\u2500\u2500 elb\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2502\xa0\xa0     \u251c\u2500\u2500 mimic.d.ts\n\u2502\xa0\xa0 \u2502\xa0\xa0     \u2514\u2500\u2500 networking-content-delivery\n\u2502\xa0\xa0 \u2502\xa0\xa0         \u2514\u2500\u2500 vpc\n\u2502\xa0\xa0 \u2502\xa0\xa0             \u251c\u2500\u2500 mimic.d.ts\n\u2502\xa0\xa0 \u251c\u2500\u2500 us2-development-stack.d.ts\n\u2502\xa0\xa0 \u251c\u2500\u2500 us2-development-stack.ts\n\u2502\xa0\xa0 \u2514\u2500\u2500 utils\n\u2502\xa0\xa0     \u251c\u2500\u2500 index.d.ts\n\u2502\xa0\xa0     \u251c\u2500\u2500 index.ts\n\u2502\xa0\xa0     \u2514\u2500\u2500 interfaces\n\u2502\xa0\xa0         \u2514\u2500\u2500 development.ts\n\u251c\u2500\u2500 package-lock.json\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 test\n\u2502\xa0\xa0 \u251c\u2500\u2500 mimic.test.d.ts\n\u2502\xa0\xa0 \u2514\u2500\u2500 mimic.test.ts\n\u2514\u2500\u2500 tsconfig.json\n"})}),"\n",(0,s.jsx)(n.h5,{id:"113-init-new-vpc",children:"1.1.3 Init New VPC"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Create a new VPC with public and private subnets, also with NAT Gateway and Internet Gateway"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Naming convention for the VPC, Subnet, Security Group, etc. is using the following format: ",(0,s.jsx)(n.code,{children:"tagProjectName-tagEnvironment-tagComponentName"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",metastring:"title='btin/lib/us-east-2/development/networking-content-delivery/vpc/mimic.ts'",children:"\n  // list of tasks need to do to create VPC\n  ...\n  private initialize() {\n    // highlight-start\n    this.createRole();\n    this.createVpcLogGroup();\n    this.createVpc();\n    this.enableFlowLogs()\n    this.createVpcGatewayEndpoint()\n    // highlight-end\n  }\n  ...\n\n\n  private createVpcLogGroup() {\n    const logGroup = new logs.LogGroup(this.scope, 'Us2DevelopmentVpcLogGroup', {\n      logGroupName: `${this.props.suffixName}/aws/vpc/vpc-flow-logs`,\n      retention: logs.RetentionDays.ONE_MONTH,\n      removalPolicy: RemovalPolicy.DESTROY\n    });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcLogGroupName', { value: logGroup.logGroupName });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcLogGroupArn', { value: logGroup.logGroupArn });\n    this.logGroup = logGroup;\n  }\n\n  private createRole() {\n    const role = new iam.Role(this.scope, 'Us2DevelopmentVpcFlowLogRole', {\n      assumedBy: new iam.ServicePrincipal('vpc-flow-logs.amazonaws.com'),\n      roleName: `${this.props.suffixName}-vpc-flow-log-role`\n    });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcFlowLogRoleArn', { value: role.roleArn });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcFlowLogRoleName', { value: role.roleName });\n    this.role = role;\n  }\n\n  private createVpc() {\n    const vpc = new ec2.Vpc(this.scope, 'Us2DevelopmentVpc', {\n      vpcName: `${this.props.suffixName}-vpc`,\n      maxAzs: this.props.vpcMaxAzs,\n      natGateways: this.props.vpcNatGateways,\n      enableDnsHostnames: true,\n      enableDnsSupport: true,\n      ipAddresses: ec2.IpAddresses.cidr(this.props.vpcCidr),\n      subnetConfiguration: [\n        {\n          cidrMask: this.props.vpcSubnetMask,\n          name: `${this.props.tagProjectName}-${this.props.tagEnvironment}-public`,\n          subnetType: ec2.SubnetType.PUBLIC,\n        },\n        {\n          cidrMask: this.props.vpcSubnetMask,\n          name: `${this.props.tagProjectName}-${this.props.tagEnvironment}-private`,\n          subnetType: ec2.SubnetType.PRIVATE_WITH_EGRESS\n        }\n      ]\n    });\n\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcId', { value: vpc.vpcId });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcCidr', { value: vpc.vpcCidrBlock });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcPublicSubnets', { value: vpc.publicSubnets.map(subnet => subnet.subnetId).join(',') });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcPrivateSubnets', { value: vpc.privateSubnets.map(subnet => subnet.subnetId).join(',') });\n    this.vpc = vpc;\n  }\n\n  private enableFlowLogs() {\n    const flowLog = new ec2.FlowLog(this.scope, 'Us2DevelopmentVpcFlowLog', {\n      resourceType: ec2.FlowLogResourceType.fromVpc(this.vpc),\n      destination: ec2.FlowLogDestination.toCloudWatchLogs(this.logGroup, this.role)\n    });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcFlowLogId', { value: flowLog.flowLogId });\n    this.flowLog = flowLog;\n  }\n\n  private createVpcGatewayEndpoint() {\n    const vpcEndpoint = new ec2.GatewayVpcEndpoint(this.scope, 'Us2DevelopmentVpcGatewayEndpoint', {\n      service: ec2.GatewayVpcEndpointAwsService.S3,\n      vpc: this.vpc,\n      subnets: [\n        { subnetType: ec2.SubnetType.PRIVATE_WITH_EGRESS }\n      ]\n    });\n    new CfnOutput(this.scope, 'Us2DevelopmentVpcGatewayEndpointId', { value: vpcEndpoint.vpcEndpointId });\n  }\n"})}),"\n",(0,s.jsx)(n.h2,{id:"containersnat",children:"Containers/Nat"}),"\n",(0,s.jsx)(n.h3,{id:"11-nat-nat-gateway-and-nat-instances",children:"1.1. Nat: Nat Gateway and Nat Instances"}),"\n",(0,s.jsxs)(n.admonition,{type:"note",children:[(0,s.jsx)(n.p,{children:"Nat Gateway and Nat Instances are used to allow the private subnet to access the internet. The main difference between Nat Gateway and Nat Instances is the performance and the cost. Nat Gateway is managed by AWS and it's more reliable and faster than Nat Instances. Nat Instances are EC2 instances that we need to manage by ourselves."}),(0,s.jsxs)(n.p,{children:["Reference: ",(0,s.jsx)(n.a,{href:"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-comparison.html",children:"https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-comparison.html"})]})]}),"\n",(0,s.jsx)(n.h5,{id:"111-comparison",children:"1.1.1 Comparison"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"NAT GateWay"}),(0,s.jsx)(n.th,{children:"Nat Instance"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Availability"}),(0,s.jsx)(n.td,{children:"Highly available. NAT gateways in each Availability Zone are implemented with redundancy. Create a NAT gateway in each Availability Zone to ensure zone-independent architecture."}),(0,s.jsx)(n.td,{children:"Use a script to manage failover between instances."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Bandwidth"}),(0,s.jsx)(n.td,{children:"Scale up to 100 Gbps."}),(0,s.jsx)(n.td,{children:"Depends on the bandwidth of the instance type."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Maintenance"}),(0,s.jsx)(n.td,{children:"Managed by AWS. You do not need to perform any maintenance."}),(0,s.jsx)(n.td,{children:"Managed by you, for example, by installing software updates or operating system patches on the instance."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Performance"}),(0,s.jsx)(n.td,{children:"Software is optimized for handling NAT traffic."}),(0,s.jsx)(n.td,{children:"A generic AMI that's configured to perform NAT."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Cost"}),(0,s.jsx)(n.td,{children:"Charged depending on the number of NAT gateways you use, duration of usage, and amount of data that you send through the NAT gateways."}),(0,s.jsx)(n.td,{children:"Charged depending on the number of NAT instances that you use, duration of usage, and instance type and size."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Type and size"}),(0,s.jsx)(n.td,{children:"Uniform offering; you don\u2019t need to decide on the type or size."}),(0,s.jsx)(n.td,{children:"Choose a suitable instance type and size, according to your predicted workload."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Public IP addresses"}),(0,s.jsx)(n.td,{children:"Choose the Elastic IP address to associate with a public NAT gateway at creation."}),(0,s.jsx)(n.td,{children:"Use an Elastic IP address or a public IP address with a NAT instance. You can change the public IP address at any time by associating a new Elastic IP address with the instance."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Private IP addresses"}),(0,s.jsx)(n.td,{children:"Automatically selected from the subnet's IP address range when you create the gateway."}),(0,s.jsx)(n.td,{children:"Assign a specific private IP address from the subnet's IP address range when you launch the instance."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Security groups"}),(0,s.jsx)(n.td,{children:"You cannot associate security groups with NAT gateways. You can associate them with the resources behind the NAT gateway to control inbound and outbound traffic."}),(0,s.jsx)(n.td,{children:"Associate with your NAT instance and the resources behind your NAT instance to control inbound and outbound traffic."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Network ACLs"}),(0,s.jsx)(n.td,{children:"Use a network ACL to control the traffic to and from the subnet in which your NAT gateway resides."}),(0,s.jsx)(n.td,{children:"Use a network ACL to control the traffic to and from the subnet in which your NAT instance resides."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Flow logs"}),(0,s.jsx)(n.td,{children:"Use flow logs to capture the traffic."}),(0,s.jsx)(n.td,{children:"Use flow logs to capture the traffic."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Port forwarding"}),(0,s.jsx)(n.td,{children:"Not supported."}),(0,s.jsx)(n.td,{children:"Manually customize the configuration to support port forwarding."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Bastion servers"}),(0,s.jsx)(n.td,{children:"Not supported."}),(0,s.jsx)(n.td,{children:"Use as a bastion server."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Traffic metrics"}),(0,s.jsx)(n.td,{children:"View CloudWatch metrics for the NAT gateway."}),(0,s.jsx)(n.td,{children:"View CloudWatch metrics for the instance."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Timeout behavior"}),(0,s.jsx)(n.td,{children:"When a connection times out, a NAT gateway returns an RST packet to any resources behind the NAT gateway that attempt to continue the connection (it does not send a FIN packet)."}),(0,s.jsx)(n.td,{children:"When a connection times out, a NAT instance sends a FIN packet to resources behind the NAT instance to close the connection."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IP fragmentation"}),(0,s.jsx)(n.td,{children:"Supports forwarding of IP fragmented packets for the UDP protocol. Does not support fragmentation for the TCP and ICMP protocols. Fragmented packets for these protocols will get dropped."}),(0,s.jsx)(n.td,{children:"Supports reassembly of IP fragmented packets for the UDP, TCP, and ICMP protocols."})]})]})]}),"\n",(0,s.jsx)(n.h5,{id:"112-nat-gateway",children:"1.1.2 Nat Gateway"}),"\n",(0,s.jsx)(n.h5,{id:"113-nat-instances",children:"1.1.3 Nat Instances"}),"\n",(0,s.jsx)(n.p,{children:"In this case, we will focus into Nat Instances to alternative solution for Nat Gateway in private subnet."}),"\n",(0,s.jsx)(n.h6,{id:"diagram",children:"Diagram"}),"\n",(0,s.jsx)(n.h6,{id:"cdk",children:"CDK"}),"\n",(0,s.jsx)(n.h6,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.h6,{id:"reference-1",children:"Reference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://medium.com/journey-through-the-cloud/high-availability-nat-with-sns-and-lambda-a85de04a7e76",children:"High Availability NAT with SNS and Lambda\n"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://community.aws/content/2b5hpna7zvZdEgaUOeE0xLN95OT/vpc-endpoints-an-alternative-to-nat-gateway",children:"VPC Endpoints: an alternative to NAT Gateway\n"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},6490:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/docsOpsAws111-452008d1d92622fc9dbe4eac65c258de.png"},5473:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/docsOpsAws112-0981546d7407b8598aee4c469ef1b128.png"},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(6540);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);