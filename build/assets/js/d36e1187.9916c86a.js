"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8858],{2018:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=s(4848),t=s(8453);const o={sidebar_position:2,toc_min_heading_level:2,toc_max_heading_level:3},r="Python",a={id:"programming-languages/python",title:"Python",description:"Installation",source:"@site/docs/programming-languages/python.mdx",sourceDirName:"programming-languages",slug:"/programming-languages/python",permalink:"/0.61.81-suruasucod-nitb/docs/programming-languages/python",draft:!1,unlisted:!1,editUrl:"https://github.com/b-tin/0.61.81-suruasucod-nitb/tree/main/docs/programming-languages/python.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"tutorialSidebar",previous:{title:"Serverless Framework",permalink:"/0.61.81-suruasucod-nitb/docs/programming-languages/serverless"},next:{title:"Frontend Stack",permalink:"/0.61.81-suruasucod-nitb/docs/programming-languages/frontend"}},l={},c=[{value:"Installation",id:"installation",level:2},{value:"1.1 Package <code>mysqlclient</code> Installation Issue on Mac M2",id:"11-package-mysqlclient-installation-issue-on-mac-m2",level:3},{value:"Problem",id:"problem",level:4},{value:"Solution",id:"solution",level:4},{value:"Reference",id:"reference",level:4},{value:"Django",id:"django",level:2},{value:"2.1 <code>Django</code> migrates database from <code>MySQL</code> to <code>PostgreSQL</code>",id:"21-django-migrates-database-from-mysql-to-postgresql",level:3},{value:"Overview",id:"overview",level:4},{value:"Preparation",id:"preparation",level:4},{value:"Reference",id:"reference-1",level:4},{value:"2.2 <code>Django</code> with <code>Redis</code> caching",id:"22-django-with-redis-caching",level:3},{value:"Overview",id:"overview-1",level:4},{value:"Installation",id:"installation-1",level:4},{value:"Reference",id:"reference-2",level:4},{value:"2.3 <code>Django</code> with <code>Redis</code> caching and Disaster Recovery",id:"23-django-with-redis-caching-and-disaster-recovery",level:3},{value:"Overview",id:"overview-2",level:4},{value:"Installation",id:"installation-2",level:4}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"python",children:"Python"}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.h3,{id:"11-package-mysqlclient-installation-issue-on-mac-m2",children:["1.1 Package ",(0,i.jsx)(n.code,{children:"mysqlclient"})," Installation Issue on Mac M2"]}),"\n",(0,i.jsx)(n.h4,{id:"problem",children:"Problem"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["When trying to install the ",(0,i.jsx)(n.code,{children:"mysqlclient"})," package on a Mac M2, you might run into some errors. This issue often pops up due to compatibility problems with certain Python versions."]})}),"\n",(0,i.jsx)(n.h4,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(n.p,{children:["Here's a quick fix to help you install ",(0,i.jsx)(n.code,{children:"mysqlclient"})," successfully:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"1. Install MySQL Client"}),": First, let's install an older version of MySQL client that's known to work well:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'// highlight-start\nbrew install mysql-client@5.7\n// highlight-end\n\n# If you need to have mysql-client@5.7 first in your PATH, run:\n#   echo \'export PATH="/opt/homebrew/opt/mysql-client@5.7/bin:$PATH"\' >> ~/.zshrc#\n\n# For compilers to find mysql-client@5.7 you may need to set:\n#   export LDFLAGS="-L/opt/homebrew/opt/mysql-client@5.7/lib"\n#   export CPPFLAGS="-I/opt/homebrew/opt/mysql-client@5.7/include"#\n\n# For pkg-config to find mysql-client@5.7 you may need to set:\n#   export PKG_CONFIG_PATH="/opt/homebrew/opt/mysql-client@5.7/lib/pkgconfig"\n\n// highlight-start\npip3 install mysqlclient==2.2.4\n// highlight-end\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Update Your PATH:"})}),"\n",(0,i.jsx)(n.p,{children:"To make sure your system recognizes the newly installed MySQL client first, update your PATH by adding the following line to your ~/.zshrc file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"echo 'export PATH=\"/opt/homebrew/opt/mysql-client@5.7/bin:$PATH\"' >> ~/.zshrc\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Set Compiler Flags:"})}),"\n",(0,i.jsx)(n.p,{children:"Help your compilers find the MySQL client:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:'export LDFLAGS="-L/opt/homebrew/opt/mysql-client@5.7/lib"\nexport CPPFLAGS="-I/opt/homebrew/opt/mysql-client@5.7/include"\n'})}),"\n",(0,i.jsx)(n.h4,{id:"reference",children:"Reference"}),"\n",(0,i.jsxs)(n.p,{children:["For more detailed information and community discussions, check out the Homebrew GitHub discussion on this topic ",(0,i.jsx)(n.a,{href:"https://github.com/orgs/Homebrew/discussions/569",children:"https://github.com/orgs/Homebrew/discussions/569"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"django",children:"Django"}),"\n",(0,i.jsxs)(n.h3,{id:"21-django-migrates-database-from-mysql-to-postgresql",children:["2.1 ",(0,i.jsx)(n.code,{children:"Django"})," migrates database from ",(0,i.jsx)(n.code,{children:"MySQL"})," to ",(0,i.jsx)(n.code,{children:"PostgreSQL"})]}),"\n",(0,i.jsx)(n.h4,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["In this tutorial, we will migrate our database from ",(0,i.jsx)(n.code,{children:"MySQL"})," version ",(0,i.jsx)(n.code,{children:"5.7"})," to ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," version ",(0,i.jsx)(n.code,{children:"15.7"})," while using ",(0,i.jsx)(n.code,{children:"Django"})," version ",(0,i.jsx)(n.code,{children:"5.0.6"}),". Although this guide is tailored for ",(0,i.jsx)(n.code,{children:"Django"})," ",(0,i.jsx)(n.code,{children:"5.0.6"}),", some of the steps may vary slightly with different versions of ",(0,i.jsx)(n.code,{children:"Django"}),"."]})}),"\n",(0,i.jsx)(n.h4,{id:"preparation",children:"Preparation"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Configure the New Database"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["First, let's set up our new ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," database in ",(0,i.jsx)(n.code,{children:"Django"}),"'s settings. Update your ",(0,i.jsx)(n.code,{children:"settings.py"})," to include both databases until the migration is complete:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"title='/projects/manga/manga/settings.py'",children:"DATABASES = {\n\t'default': {\n\t\t\"ENGINE\": os.environ['DB_ENGINE'],\n\t\t\"NAME\": os.environ['DB_NAME'],\n\t\t\"USER\": os.environ['DB_USER'],\n\t\t\"PASSWORD\": os.environ['DB_PASSWORD'],\n\t\t\"HOST\": os.environ['DB_HOST'],\n\t\t\"PORT\": os.environ['DB_PORT'],\n\t},\n  // highlight-start\n\t'postgresql': {\n\t\t\"ENGINE\": \"django.db.backends.postgresql_psycopg2\",\n\t\t\"NAME\": os.environ['DB_NAME'],\n\t\t\"USER\": os.environ['DB_USER'],\n\t\t\"PASSWORD\": os.environ['DB_PASSWORD'],\n\t\t\"HOST\": os.environ['DB_HOST'],\n\t\t\"PORT\": os.environ['DB_PORT'],\n\t}\n  // highlight-end\n}\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:"Migrate the Database Schema"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Apply the existing migrations to your new ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," database with the following command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"python3 manage.py migrate --database=postgresql\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Note: The ",(0,i.jsx)(n.code,{children:"syncdb"})," command is deprecated in newer versions of ",(0,i.jsx)(n.code,{children:"Django"}),", and the ",(0,i.jsx)(n.code,{children:"--no-initial-data"})," flag has also been removed."]}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:"Clean Up the New Database"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Before transferring the data, ensure the new database is clean. This step involves removing any initial data that might conflict with your existing data:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"python3 manage.py sqlflush --database=postgresql\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:"Transfer Data"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"To move your data, use Django's dumpdata and loaddata commands. Make sure to use the --natural-foreign option to handle foreign keys correctly:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"# Dump all data from the old database\npython3 manage.py dumpdata --all --natural-foreign > /tmp/dump_YYYYMMDD.json\n\n# Load the data into the new PostgreSQL database\npython3 manage.py loaddata /tmp/dump_YYYYMMDD.json --database=postgresql\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"5",children:["\n",(0,i.jsx)(n.li,{children:"Update Configuration"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["After transferring all data, configure ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," as the ",(0,i.jsx)(n.code,{children:"default"})," database in your ",(0,i.jsx)(n.code,{children:"settings.py"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",metastring:"title='/projects/manga/manga/settings.py'",children:"DATABASES = {\n  // highlight-start\n\t'mysql': {\n  // highlight-end\n\t\t\"ENGINE\": os.environ['DB_ENGINE'],\n\t\t\"NAME\": os.environ['DB_NAME'],\n\t\t\"USER\": os.environ['DB_USER'],\n\t\t\"PASSWORD\": os.environ['DB_PASSWORD'],\n\t\t\"HOST\": os.environ['DB_HOST'],\n\t\t\"PORT\": os.environ['DB_PORT'],\n\t},\n  // highlight-start\n\t'default': {\n  // highlight-end\n\t\t\"ENGINE\": \"django.db.backends.postgresql_psycopg2\",\n\t\t\"NAME\": os.environ['DB_NAME'],\n\t\t\"USER\": os.environ['DB_USER'],\n\t\t\"PASSWORD\": os.environ['DB_PASSWORD'],\n\t\t\"HOST\": os.environ['DB_HOST'],\n\t\t\"PORT\": os.environ['DB_PORT'],\n\t}\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Once you've completed the above steps, test your application thoroughly to ensure everything works as expected with the new ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," database. Adjust your configurations or troubleshoot any issues that arise during testing."]}),"\n",(0,i.jsx)(n.h4,{id:"reference-1",children:"Reference"}),"\n",(0,i.jsxs)(n.p,{children:["For additional details and tips on migrating from ",(0,i.jsx)(n.code,{children:"MySQL"})," to ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," using ",(0,i.jsx)(n.code,{children:"Django"}),", visit this comprehensive guide ",(0,i.jsx)(n.a,{href:"https://blog.libove.org/posts/django-migrate-mysql-to-postgres/",children:"https://blog.libove.org/posts/django-migrate-mysql-to-postgres/"})]}),"\n",(0,i.jsxs)(n.p,{children:["With this guide, migrating your ",(0,i.jsx)(n.code,{children:"Django"})," application from ",(0,i.jsx)(n.code,{children:"MySQL"})," to ",(0,i.jsx)(n.code,{children:"PostgreSQL"})," should be smooth and efficient. Happy coding!"]}),"\n",(0,i.jsxs)(n.h3,{id:"22-django-with-redis-caching",children:["2.2 ",(0,i.jsx)(n.code,{children:"Django"})," with ",(0,i.jsx)(n.code,{children:"Redis"})," caching"]}),"\n",(0,i.jsx)(n.h4,{id:"overview-1",children:"Overview"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Caching is like having a speedy storage spot for data that's frequently used or costly to fetch. In ",(0,i.jsx)(n.code,{children:"Django"}),", integrating ",(0,i.jsx)(n.code,{children:"Redis"})," as a caching solution speeds up data retrieval, making your applications snappier and more efficient. Let's dive into how to set this up!"]})}),"\n",(0,i.jsx)(n.h4,{id:"installation-1",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Install Necessary Packages"})}),"\n",(0,i.jsx)(n.p,{children:"Install the following packages by adding them to your project dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"redis[hiredis]==5.0.7\ndjango-debug-toolbar==4.4.6\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Update Your Settings"})}),"\n",(0,i.jsxs)(n.p,{children:["In your ",(0,i.jsx)(n.code,{children:"settings.py"}),", make the following changes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Debug Toolbar: Useful for monitoring cache performance among other things, ensure it's enabled only in debug mode for security."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'if DEBUG:\n  INTERNAL_IPS = ["127.0.0.1"]\n\nINSTALLED_APPS = [\n  ...  # Other apps\n  "debug_toolbar",\n]\n\nMIDDLEWARE = [\n  ...  # Other middleware\n  "debug_toolbar.middleware.DebugToolbarMiddleware",\n]\n\nCACHES = {\n  "default": {\n    "BACKEND": "django.core.cache.backends.redis.RedisCache",\n    "LOCATION": "redis://localhost:6378/",\n    "KEY_PREFIX": "manga",\n    "TIMEOUT": 60 * 1,  # 1 minute\n  }\n}\n\nCACHE_TTL = 60 * 5  # Cache time to live is 5 minutes.\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Configure URLs"})}),"\n",(0,i.jsxs)(n.p,{children:["Make sure the ",(0,i.jsx)(n.strong,{children:"Debug Toolbar"})," is accessible by configuring your ",(0,i.jsx)(n.code,{children:"urls.py"})," accordingly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'urlpatterns = [\n  path("admin/", admin.site.urls),\n  path("", include("news.urls")),\n  path("shop/", include("stationery.urls")),\n  path("__debug__/", include("debug_toolbar.urls")),\n]\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"4. Enable Caching in Views"})}),"\n",(0,i.jsxs)(n.p,{children:["Leverage ",(0,i.jsx)(n.code,{children:"Django"}),"'s caching capabilities in your views to minimize database hits:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from django.shortcuts import render\nfrom django.views.decorators.cache import cache_page\nfrom .models import Category\nfrom .helper import chunk_array\n\nCACHE_TTL = getattr(settings, 'CACHE_TTL', DEFAULT_TIMEOUT)\n\n@cache_page(CACHE_TTL)\ndef index(request):\n  items_category = cache.get('cache_items_category')\n  if not items_category:\n    items_category = Category.objects.filter(\n      is_show_on_homepage=True,\n      status=APP_VALUE_CATEGORY_CHOICE_STATUS_DEFAULT\n    ).order_by('name')\n    cache.set('cache_items_category', items_category, 20)  # 20 seconds expire\n"})}),"\n",(0,i.jsxs)(n.p,{children:["By decorating your view functions with ",(0,i.jsx)(n.code,{children:"@cache_page"}),", you define how long each page should be stored in the cache, drastically reducing load times and improving user experience."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{alt:"docsProgrammingLanguagesPythonDjango210",src:s(7112).A+"",width:"1026",height:"869"}),"\n",(0,i.jsx)(n.img,{alt:"docsProgrammingLanguagesPythonDjango211",src:s(977).A+"",width:"881",height:"497"})]}),"\n",(0,i.jsx)(n.h4,{id:"reference-2",children:"Reference"}),"\n",(0,i.jsxs)(n.p,{children:["Check out these additional resources to further enhance your understanding of caching in ",(0,i.jsx)(n.code,{children:"Django"})," with ",(0,i.jsx)(n.code,{children:"Redis"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://aisaastemplate.com/blog/django-caching-guide/",children:"https://aisaastemplate.com/blog/django-caching-guide/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://fly.io/django-beats/caching-in-django-with-redis/",children:"https://fly.io/django-beats/caching-in-django-with-redis/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://dev.to/emmakodes_/how-to-use-redis-to-cache-data-for-your-django-project-dl5",children:"https://dev.to/emmakodes_/how-to-use-redis-to-cache-data-for-your-django-project-dl5"})}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"23-django-with-redis-caching-and-disaster-recovery",children:["2.3 ",(0,i.jsx)(n.code,{children:"Django"})," with ",(0,i.jsx)(n.code,{children:"Redis"})," caching and Disaster Recovery"]}),"\n",(0,i.jsx)(n.h4,{id:"overview-2",children:"Overview"}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["This section will guide you through setting up ",(0,i.jsx)(n.code,{children:"Redis"})," caching in a ",(0,i.jsx)(n.code,{children:"Django"})," application and outline strategies for disaster recovery to keep your data safe during system failures. We'll discuss how to ensure your application continues to operate smoothly, even when ",(0,i.jsx)(n.code,{children:"Redis"})," is temporarily unavailable, by gracefully degrading to non-cached data retrieval."]})}),"\n",(0,i.jsx)(n.h4,{id:"installation-2",children:"Installation"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Create a Custom Cache Backend"})}),"\n",(0,i.jsxs)(n.p,{children:["To maintain resilience, create a custom backend that handles ",(0,i.jsx)(n.code,{children:"Redis"})," connectivity issues. This backend will use Redis when possible but will switch to a non-caching mode during outages."]}),"\n",(0,i.jsxs)(n.p,{children:["Creating the ",(0,i.jsx)(n.strong,{children:"Custom Backend"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Create a new Python file in your project, e.g., my_project/my_app/",(0,i.jsx)(n.code,{children:"custom_redis_cache.py"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Extend the existing ",(0,i.jsx)(n.code,{children:"Redis"})," backend with additional error handling:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from django.core.cache.backends.redis import RedisCache\nfrom redis.exceptions import ConnectionError\nimport logging\n\nlogger = logging.getLogger(__name__)\n\nclass SafeRedisCache(RedisCache):\n  def get(self, key, default=None, version=None):\n    try:\n      return super().get(key, default, version)\n    except ConnectionError as e:\n      logger.error(f"Redis connection error on GET operation: {e}")\n      return default\n\n  def set(self, key, value, timeout=None, version=None):\n    try:\n      super().set(key, value, timeout, version)\n    except ConnectionError as e:\n      logger.error(f"Redis connection error on SET operation: {e}")\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Update Your Settings"})}),"\n",(0,i.jsxs)(n.p,{children:["Switch your caching backend in ",(0,i.jsx)(n.code,{children:"settings.py"})," to use your robust custom backend. This helps minimize downtime by ignoring ",(0,i.jsx)(n.code,{children:"Redis"})," when it's facing issues, allowing your site to operate, albeit more slowly."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'"""\ndefault caching with redis and this way is not recommended for production.\nbecause when redis has issues, example: connection refused, site will be down\nso switch to use `custom_redis_cache.py`\n"""\n# CACHES = {\n#   "default": {\n#     "BACKEND": "django.core.cache.backends.redis.RedisCache",\n#     "LOCATION": "redis://localhost:6378/",\n#     "KEY_PREFIX": "manga",\n#     "TIMEOUT": 60 * 1,  # in seconds: 60 * 1 (1 minute)\n#   }\n# }\n\n"""\nwith custom_redis_cache, site will be safe with minimal downtime\ncause of ignoring redis if it has issue, so at that time site will be slow\nbut still working and we buy time to fix redis issue\n"""\nCACHES = {\n  "default": {\n    "BACKEND": "manga.custom_redis_cache.SafeRedisCache",\n    "LOCATION": "redis://localhost:6378/",\n    "KEY_PREFIX": "manga",\n    "TIMEOUT": 60 * 1,  # 1 minute\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Adjust Your Views"})}),"\n",(0,i.jsxs)(n.p,{children:["With your new custom cache backend, views will handle ",(0,i.jsx)(n.code,{children:"Redis"})," errors internally, so no changes are needed in most cases. However, implementing a fallback strategy in critical views can be prudent:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"@cache_page(CACHE_TTL)\ndef index(request):\n  try:\n    # get all categories with cache\n    items_category = cache.get('cache_items_category')\n    if not items_category:\n      items_category = Category.objects.filter(\n        is_show_on_homepage=True,\n        status=APP_VALUE_CATEGORY_CHOICE_STATUS_DEFAULT\n      ).order_by('name')\n      cache.set('cache_items_category', items_category, 20)  # 20 seconds expire\n  except ConnectionError as e:\n    print(f\"error {e}\")\n    # get all categories without cache when redis issues\n    items_category = Category.objects.filter(\n      is_show_on_homepage=True,\n      status=APP_VALUE_CATEGORY_CHOICE_STATUS_DEFAULT\n    ).order_by('name')\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7112:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/docsProgrammingLanguagesPythonDjango210-f56515b98c99fc55e5708be291519ac5.png"},977:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/docsProgrammingLanguagesPythonDjango211-5b8870c60ab5cd9b3418dd894f7dc00e.png"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(6540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);